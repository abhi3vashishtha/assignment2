# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Clientmessage

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Client(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Client()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsClient(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Client
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Client
    def ClientType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Client
    def Person(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Clientmessage.Person import Person
            obj = Person()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Client
    def Group(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Clientmessage.Group import Group
            obj = Group()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ClientStart(builder):
    builder.StartObject(3)

def Start(builder):
    ClientStart(builder)

def ClientAddClientType(builder, clientType):
    builder.PrependInt8Slot(0, clientType, 0)

def AddClientType(builder, clientType):
    ClientAddClientType(builder, clientType)

def ClientAddPerson(builder, person):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(person), 0)

def AddPerson(builder, person):
    ClientAddPerson(builder, person)

def ClientAddGroup(builder, group):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(group), 0)

def AddGroup(builder, group):
    ClientAddGroup(builder, group)

def ClientEnd(builder):
    return builder.EndObject()

def End(builder):
    return ClientEnd(builder)
